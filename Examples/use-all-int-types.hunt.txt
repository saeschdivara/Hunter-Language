; ModuleID = 'Hunt'
source_filename = "Hunt"

@0 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@1 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1
@2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@3 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1
@4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@5 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1
@6 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@7 = private unnamed_addr constant [7 x i8] c"%lld%s\00", align 1

define i32 @main() {
EntryBlock:
  call void @hunt()
  ret i32 0
}

declare i32 @strcmp(i8*, i8*)

declare i32 @printf(i8*, ...)

define internal void @hunt() {
entry:
  %helloNumber8 = alloca i8, align 1
  store i8 8, i8* %helloNumber8, align 1
  %0 = load i8, i8* %helloNumber8, align 1
  %1 = call i32 (i8*, ...) @printf([5 x i8]* @1, i8 %0, [2 x i8]* @0)
  %helloNumber16 = alloca i16, align 2
  store i16 22200, i16* %helloNumber16, align 2
  %2 = load i16, i16* %helloNumber16, align 2
  %3 = call i32 (i8*, ...) @printf([5 x i8]* @3, i16 %2, [2 x i8]* @2)
  %helloNumber32 = alloca i32, align 4
  store i32 62200, i32* %helloNumber32, align 4
  %4 = load i32, i32* %helloNumber32, align 4
  %5 = call i32 (i8*, ...) @printf([5 x i8]* @5, i32 %4, [2 x i8]* @4)
  %helloNumber = alloca i64, align 8
  store i64 22222222232, i64* %helloNumber, align 4
  %6 = load i64, i64* %helloNumber, align 4
  %7 = call i32 (i8*, ...) @printf([7 x i8]* @7, i64 %6, [2 x i8]* @6)
  ret void
}
