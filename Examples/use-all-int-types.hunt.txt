; ModuleID = 'Hunt'
source_filename = "Hunt"

@0 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@1 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1
@2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@3 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1
@4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@5 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1
@6 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@7 = private unnamed_addr constant [7 x i8] c"%lld%s\00", align 1

define i32 @main() {
EntryBlock:
  call void @hunt()
  ret i32 0
}

define internal void @hunt() !dbg !3 {
entry:
  %helloNumber8 = alloca i8, align 1, !dbg !7
  store i8 8, i8* %helloNumber8, align 1, !dbg !7
  call void @llvm.dbg.declare(metadata i8* %helloNumber8, metadata !8, metadata !DIExpression()), !dbg !10
  %0 = load i8, i8* %helloNumber8, align 1, !dbg !11
  %1 = call i32 (i8*, ...) @printf([5 x i8]* @1, i8 %0, [2 x i8]* @0), !dbg !11
  %helloNumber16 = alloca i16, align 2, !dbg !12
  store i16 22200, i16* %helloNumber16, align 2, !dbg !12
  call void @llvm.dbg.declare(metadata i16* %helloNumber16, metadata !13, metadata !DIExpression()), !dbg !15
  %2 = load i16, i16* %helloNumber16, align 2, !dbg !16
  %3 = call i32 (i8*, ...) @printf([5 x i8]* @3, i16 %2, [2 x i8]* @2), !dbg !16
  %helloNumber32 = alloca i32, align 4, !dbg !17
  store i32 62200, i32* %helloNumber32, align 4, !dbg !17
  call void @llvm.dbg.declare(metadata i32* %helloNumber32, metadata !18, metadata !DIExpression()), !dbg !20
  %4 = load i32, i32* %helloNumber32, align 4, !dbg !21
  %5 = call i32 (i8*, ...) @printf([5 x i8]* @5, i32 %4, [2 x i8]* @4), !dbg !21
  %helloNumber = alloca i64, align 8, !dbg !22
  store i64 22222222232, i64* %helloNumber, align 4, !dbg !22
  call void @llvm.dbg.declare(metadata i64* %helloNumber, metadata !23, metadata !DIExpression()), !dbg !25
  %6 = load i64, i64* %helloNumber, align 4, !dbg !26
  %7 = call i32 (i8*, ...) @printf([7 x i8]* @7, i64 %6, [2 x i8]* @6), !dbg !26
  ret void, !dbg !26
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #0

declare i32 @printf(i8*, ...)

attributes #0 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!0}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "Hunter Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2)
!1 = !DIFile(filename: "use-all-int-types.hunt", directory: "./Examples")
!2 = !{}
!3 = distinct !DISubprogram(name: "hunt", scope: !1, file: !1, line: 1, type: !4, scopeLine: 4, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4 = !DISubroutineType(types: !5)
!5 = !{!6}
!6 = !DIBasicType(name: "void", size: 64)
!7 = !DILocation(line: 2, column: 10, scope: !3)
!8 = !DILocalVariable(name: "helloNumber8", scope: !3, file: !1, line: 2, type: !9)
!9 = !DIBasicType(name: "int", size: 8)
!10 = !DILocation(line: 2, scope: !3)
!11 = !DILocation(line: 3, column: 10, scope: !3)
!12 = !DILocation(line: 5, column: 10, scope: !3)
!13 = !DILocalVariable(name: "helloNumber16", scope: !3, file: !1, line: 5, type: !14)
!14 = !DIBasicType(name: "int", size: 16)
!15 = !DILocation(line: 5, scope: !3)
!16 = !DILocation(line: 6, column: 10, scope: !3)
!17 = !DILocation(line: 8, column: 10, scope: !3)
!18 = !DILocalVariable(name: "helloNumber32", scope: !3, file: !1, line: 8, type: !19)
!19 = !DIBasicType(name: "int", size: 32)
!20 = !DILocation(line: 8, scope: !3)
!21 = !DILocation(line: 9, column: 10, scope: !3)
!22 = !DILocation(line: 11, column: 10, scope: !3)
!23 = !DILocalVariable(name: "helloNumber", scope: !3, file: !1, line: 11, type: !24)
!24 = !DIBasicType(name: "int", size: 64)
!25 = !DILocation(line: 11, scope: !3)
!26 = !DILocation(line: 12, column: 10, scope: !3)
