; ModuleID = 'Hunt'
source_filename = "Hunt"

@0 = private unnamed_addr constant [8 x i8] c"Hello #\00", align 1
@1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@2 = private unnamed_addr constant [9 x i8] c"%s%lld%s\00", align 1

define i32 @main() {
EntryBlock:
  call void @hunt()
  ret i32 0
}

declare i32 @strcmp(i8*, i8*)

declare i32 @printf(i8*, ...)

define internal void @hunt() {
entry:
  %counter = alloca i64, align 8
  store i64 1, i64* %counter, align 4
  br label %for-loop

for-loop:                                         ; preds = %for-loop, %entry
  %0 = load i64, i64* %counter, align 4
  %1 = call i32 (i8*, ...) @printf([9 x i8]* @2, [8 x i8]* @0, i64 %0, [2 x i8]* @1)
  %2 = load i64, i64* %counter, align 4
  %next-counter = add i64 %2, 1
  store i64 %next-counter, i64* %counter, align 4
  %3 = load i64, i64* %counter, align 4
  %loop-condition = icmp sle i64 %3, 10
  br i1 %loop-condition, label %for-loop, label %after-for-loop

after-for-loop:                                   ; preds = %for-loop
  ret void
}
