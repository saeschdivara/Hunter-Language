; ModuleID = 'Hunt'
source_filename = "Hunt"

@0 = private unnamed_addr constant [8 x i8] c"While #\00", align 1
@1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@2 = private unnamed_addr constant [7 x i8] c"%s%d%s\00", align 1

define i32 @main() {
EntryBlock:
  call void @hunt()
  ret i32 0
}

declare i32 @strcmp(i8*, i8*)

declare i32 @printf(i8*, ...)

define internal void @hunt() {
entry:
  %foo = alloca i8, align 1
  store i8 1, i8* %foo, align 1
  br label %while-loop

while-loop:                                       ; preds = %while-body, %entry
  %0 = load i8, i8* %foo, align 1
  %1 = icmp sle i8 %0, 10
  br i1 %1, label %while-body, label %after-while-loop

while-body:                                       ; preds = %while-loop
  %2 = load i8, i8* %foo, align 1
  %3 = call i32 (i8*, ...) @printf([7 x i8]* @2, [8 x i8]* @0, i8 %2, [2 x i8]* @1)
  %4 = load i8, i8* %foo, align 1
  %next-foo = add i8 %4, 1
  store i8 %next-foo, i8* %foo, align 1
  br label %while-loop

after-while-loop:                                 ; preds = %while-loop
  ret void
}
